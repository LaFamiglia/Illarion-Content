-- INSERT INTO "quests" ("qst_id", "qst_script") VALUES (QUESTID, 'quest.SCRIPTNAME');

local common = require("base.common")
module("quest.SCRIPTNAME", package.seeall)

GERMAN = Player.german
ENGLISH = Player.english

-- Insert the quest title here, in both languages
Title = {}
Title[GERMAN] = "Deutscher Questtitel"
Title[ENGLISH] = "English Quest Title"

-- Insert an extensive description of each status here, in both languages
-- Make sure that the player knows exactly where to go and what to do
Description = {}
Description[GERMAN] = {}
Description[ENGLISH] = {}
Description[GERMAN][1] = "Tolle lange Beschreibung die angezeigt wird wenn man Queststatus 1 erreicht, auch was man wo machen muss ..."
Description[ENGLISH][1] = "Cool long description which is displayed when you reach quest status 1, also mention what to do where now ..."

-- Insert the position of the quest start here (probably the position of an NPC or item)
Start = position(1, 2, 3) OR Start = {1, 2, 3}

-- For each status insert a list of positions where the quest will continue, i.e. a new status can be reached there
QuestTarget = {}
QuestTarget[1] = {position(1, 2, 3), position(4, 5, 6)} OR QuestTarget[1] = {{1, 2, 3}, {4, 5, 6}}


-- Insert the quest status which is reached at the end of the quest
FINAL_QUEST_STATUS = 0


function QuestTitle(user)
    return common.GetNLS(user, Title[GERMAN], Title[ENGLISH])
end

function QuestDescription(user, status)
    local german = Description[GERMAN][status] or ""
    local english = Description[ENGLISH][status] or ""

    return common.GetNLS(user, german, english)
end

-- Availability of the quest
-- Possible values: Player.questAvailable (yellow quest marker "!")
--                  Player.questWillBeAvailable (grey quest marker "!")
--                  Player.questNotAvailable (no quest marker)
-- If the quest could be available soon (e.g. missing skill) return Player.questWillBeAvailable
-- and if the player tries to accept the quest, inform them what exactly is missing to do so.
-- If the quest will not be available (wrong town, too much skill already, etc.) return
-- Player.questNotAvailable.
-- The function below is the server default. It will be used if this entry point is not defined.
--[[
function QuestAvailability(user, status)
    if status == 0 then
        return Player.questAvailable
    else
        return Player.questNotAvailable
    end
end
--]]

function QuestStart()
    return Start
end

function QuestTargets(user, status)
    return QuestTarget[status]
end

function QuestFinalStatus()
    return FINAL_QUEST_STATUS
end
